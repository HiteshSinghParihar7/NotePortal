{"ast":null,"code":"var _jsxFileName = \"F:\\\\Desktop\\\\BotNotes\\\\Bot-Notes\\\\src\\\\context\\\\notes\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport NoteContext from \"./NoteContext.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  var host = \"http://localhost:5000\";\n  const initialNotes = [];\n  const [notes, setNotes] = useState(initialNotes);\n  const getAllNotes = async () => {\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      }\n    });\n    const json = await response.json();\n    setNotes(json);\n  };\n  //Add a Note\n  const addNote = async note => {\n    const response = await fetch(`${host}/api/notes/addnotes`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        title: note.title,\n        description: note.description,\n        tag: note.tag\n      })\n    });\n    var json = await response.json();\n    console.log(json);\n    setNotes(notes.concat(note));\n  };\n  //Delete a Note\n  const deleteNote = async id => {\n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    const response = await fetch(`${host}/api/notes/deletenotes/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      }\n    });\n    setNotes(newNotes);\n  };\n  //Edit a Note\n  const editNote = async (id, title, description, tag) => {\n    //API Call:Fetch with headers\n\n    const response = await fetch(`${host}/api/notes/updatenotes/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        title: title,\n        description: description,\n        tag: tag\n      })\n    });\n    const json = response.json();\n\n    //Logic to update the note\n    for (var i = 0; i < notes.length; i++) {\n      if (notes[i]._id === id) {\n        notes[i].title = title;\n        notes[i].description = description;\n        notes[i].tag = tag;\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes: notes,\n      setNotes: setNotes,\n      addNote: addNote,\n      deleteNote: deleteNote,\n      getAllNotes: getAllNotes,\n      editNote: editNote\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteState, \"U0gqYVJX8qasCuef0/bRvQrZ8LU=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["React","useState","NoteContext","NoteState","props","host","initialNotes","notes","setNotes","getAllNotes","response","fetch","method","headers","localStorage","getItem","json","addNote","note","body","JSON","stringify","title","description","tag","console","log","concat","deleteNote","id","newNotes","filter","_id","editNote","i","length","children"],"sources":["F:/Desktop/BotNotes/Bot-Notes/src/context/notes/NoteState.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport NoteContext from \"./NoteContext.js\";\r\n\r\nconst NoteState = (props) => {\r\n  var host = \"http://localhost:5000\";\r\n  const initialNotes = [];\r\n  const [notes, setNotes] = useState(initialNotes);\r\n\r\n  const getAllNotes = async () => {\r\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\r\n      method: \"GET\",\r\n\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\": localStorage.getItem(\"token\"),\r\n      },\r\n    });\r\n    const json = await response.json();\r\n    setNotes(json);\r\n  };\r\n  //Add a Note\r\n  const addNote = async (note) => {\r\n    const response = await fetch(`${host}/api/notes/addnotes`, {\r\n      method: \"POST\",\r\n\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\": localStorage.getItem(\"token\"),\r\n      },\r\n\r\n      body: JSON.stringify({\r\n        title: note.title,\r\n        description: note.description,\r\n        tag: note.tag,\r\n      }),\r\n    });\r\n    var json = await response.json();\r\n    console.log(json);\r\n    setNotes(notes.concat(note));\r\n  };\r\n  //Delete a Note\r\n  const deleteNote = async (id) => {\r\n    const newNotes = notes.filter((note) => {\r\n      return note._id !== id;\r\n    });\r\n    const response = await fetch(`${host}/api/notes/deletenotes/${id}`, {\r\n      method: \"DELETE\",\r\n\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\": localStorage.getItem(\"token\"),\r\n      },\r\n    });\r\n\r\n    setNotes(newNotes);\r\n  };\r\n  //Edit a Note\r\n  const editNote = async (id, title, description, tag) => {\r\n    //API Call:Fetch with headers\r\n\r\n    const response = await fetch(`${host}/api/notes/updatenotes/${id}`, {\r\n      method: \"PUT\",\r\n\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\": localStorage.getItem(\"token\"),\r\n      },\r\n\r\n      body: JSON.stringify({\r\n        title: title,\r\n        description: description,\r\n        tag: tag,\r\n      }),\r\n    });\r\n    const json = response.json();\r\n\r\n    //Logic to update the note\r\n    for (var i = 0; i < notes.length; i++) {\r\n      if (notes[i]._id === id) {\r\n        notes[i].title = title;\r\n        notes[i].description = description;\r\n        notes[i].tag = tag;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <NoteContext.Provider\r\n      value={{\r\n        notes: notes,\r\n        setNotes: setNotes,\r\n        addNote: addNote,\r\n        deleteNote: deleteNote,\r\n        getAllNotes: getAllNotes,\r\n        editNote: editNote,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </NoteContext.Provider>\r\n  );\r\n};\r\nexport default NoteState;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}